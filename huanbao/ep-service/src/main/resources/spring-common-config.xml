<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context-2.5.xsd
	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.0.xsd
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.0.xsd"
	default-autowire="byName">
	<context:annotation-config />
	<context:component-scan base-package="com.zz91.ep">
		<context:exclude-filter expression="org.springframework.stereotype.Controller"
			type="annotation" />
	</context:component-scan>
	<bean id="propertyConfig"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>${jdbc.location}</value>
				<value>classpath:web.properties</value>
			</list>
		</property>
	</bean>
	<!--配置一个数据源,根据上面propertyConfig指定的location去找数据库连接的配置信息 <bean id="dataSource" 
		class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close"> 
		<property name="driverClass"> <value>${jdbc.driver}</value> </property> <property 
		name="jdbcUrl"> <value>${jdbc.url}</value> </property> <property name="properties"> 
		<props> <prop key="c3p0.minPoolSize">2</prop> <prop key="c3p0.maxPoolSize">50</prop> 
		<prop key="c3p0.timeout">5000</prop> <prop key="c3p0.max_statement">100</prop> 
		<prop key="c3p0.testConnectionOnCheckout">true</prop> <prop key="c3p0.idleConnectionTestPeriod">18000</prop> 
		<prop key="automaticTestTable">mail_template</prop> <prop key="c3p0.maxIdleTime">25000</prop> 
		<prop key="user">${jdbc.username}</prop> <prop key="password">${jdbc.password}</prop> 
		</props> </property> </bean> -->
	<bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName">
			<value>${jdbc.driver}</value>
		</property>
		<property name="url">
			<value>${jdbc.url}</value>
		</property>
		<property name="username">
			<value>${jdbc.username}</value>
		</property>
		<property name="password">
			<value>${jdbc.password}</value>
		</property>
	</bean>
	<!--根据dataSource和configLocation创建一个SqlMapClient -->
	<bean id="sqlMapClient" class="org.springframework.orm.ibatis.SqlMapClientFactoryBean">
		<property name="configLocation" value="classpath:sql-map-config.xml">
		</property>
		<property name="dataSource" ref="dataSource">
		</property>
	</bean>
	<!--事务管理DataSourceTransactionManager -->
	<bean id="txManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	<!--启动spring注解功能 -->
	<tx:annotation-driven transaction-manager="txManager" />
</beans>