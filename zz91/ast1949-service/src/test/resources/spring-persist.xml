<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context-2.5.xsd
	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.0.xsd
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.0.xsd"
	default-autowire="byName">
	<context:component-scan base-package="com.ast.ast1949.persist" />
	<!--此bean告诉Spring去哪找数据库的配置信息,因为有此Bean才出现下面用${}标记来取变量的语句-->
	<bean id="propertyConfig"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="ignoreUnresolvablePlaceholders" value="true" />
		<property name="locations">
			<list>
				<value>classpath:persist.properties</value>
			</list>
		</property>
	</bean>

	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
		destroy-method="close">
		<property name="driverClass">
			<value>${jdbc.driver}</value>
		</property>
		<property name="jdbcUrl">
			<value>${jdbc.astUrl}</value>
		</property>
		<property name="properties">
			<props>
				<prop key="c3p0.minPoolSize">2</prop>
				<prop key="c3p0.maxPoolSize">50</prop>
				<prop key="c3p0.timeout">5000</prop>
				<prop key="c3p0.max_statement">100</prop>
				<prop key="c3p0.testConnectionOnCheckout">true</prop>
				<prop key="c3p0.idleConnectionTestPeriod">18000</prop>
				<prop key="automaticTestTable">mail_template</prop>
				<prop key="c3p0.maxIdleTime">25000</prop>
				<prop key="user">${jdbc.username}</prop>
				<prop key="password">${jdbc.password}</prop>
			</props>
		</property>
	</bean>
	<!--根据dataSource和configLocation创建一个SqlMapClient-->
	<bean id="sqlMapClient" class="org.springframework.orm.ibatis.SqlMapClientFactoryBean">
		<property name="configLocations">
			<list>
				<value>classpath:/SqlMapConfig.xml</value>
			</list>
		</property>
		<property name="dataSource">
			<ref bean="dataSource" />
		</property>
	</bean>


	<!-- message loader -->
	<bean id="messageSource"
		class="org.springframework.context.support.ResourceBundleMessageSource">
		<property name="basename" value="i18n_web" />
	</bean>

</beans>